-- Active: 1671141046592@@127.0.0.1@3306@star_travel


DROP DATABASE STAR_TRAVEL;
CREATE DATABASE STAR_TRAVEL;
USE STAR_TRAVEL; 

CREATE TABLE
    COUNTRY (
        ID INT PRIMARY KEY AUTO_INCREMENT,
        COUNTRY_NAME VARCHAR(45) NOT NULL UNIQUE,
        VOTE_AMOUNT INT,
        RATE INT CHECK(
            RATE BETWEEN 0 AND 5
        ),
        ISO_CODE CHAR(3)
    );

-- CREATE TABLE
--     COUNTRY_STATE(
--         ID INT AUTO_INCREMENT,
--         STATE_NAME VARCHAR(45) UNIQUE,
--         VOTE_AMOUNT INT,
--         RATE INT CHECK(
--             RATE BETWEEN 0 AND 5
--         ),
--         FK_COUNTRY INT,
--         Foreign Key (FK_COUNTRY) REFERENCES COUNTRY(ID),
--         PRIMARY KEY (ID, FK_COUNTRY)
--     ) AUTO_INCREMENT = 100;


CREATE TABLE
    USER_PROFILE (
        ID INT PRIMARY KEY AUTO_INCREMENT,
        USERNAME VARCHAR (45) NOT NULL,
        EMAIL VARCHAR (60) NOT NULL UNIQUE,
        PASSWORDS VARCHAR (25) NOT NULL,
        NICKNAME VARCHAR(14) NOT NULL UNIQUE,
        BIO VARCHAR(100),
        PROFILE_PIC LONGBLOB,
        FK_COUNTRY INT,
        FOREIGN KEY (FK_COUNTRY) REFERENCES COUNTRY(ID)
    ) AUTO_INCREMENT = 2210;

CREATE TABLE
    POST(
        ID INT AUTO_INCREMENT,
        FK_USER INT NOT NULL,
        FK_COUNTRY INT,
        POST_CONTENT VARCHAR (255),
        POST_PIC LONGBLOB,
        POST_TIME DATETIME,
        CHECK(
            POST_CONTENT != NULL
            OR POST_PIC != NULL
        ),
        Foreign Key (FK_USER) REFERENCES USER_PROFILE (ID),
        Foreign Key (FK_COUNTRY) REFERENCES COUNTRY(ID),
        PRIMARY KEY (ID, FK_USER)
    ) AUTO_INCREMENT = 9900;


CREATE TABLE
    POST_COMMENTS(
        ID INT AUTO_INCREMENT,
        COMMENT_CONTENT VARCHAR(255),
        COMMENT_TIME DATETIME,
        FK_POST INT,
        FK_USER INT,
        FK_COMMENT INT,
        Foreign Key (FK_POST) REFERENCES POST(ID),
        Foreign Key (FK_USER) REFERENCES USER_PROFILE(ID),
        Foreign Key (FK_COMMENT) REFERENCES POST_COMMENTS(ID),
        PRIMARY KEY (ID, FK_POST, FK_USER)
    );


CREATE TABLE
    LIKES (
        FK_COMMENT INT,
        FK_POST INT,
        FK_USER INT,
        Foreign Key (FK_COMMENT) REFERENCES POST_COMMENTS(ID),
        Foreign Key (FK_POST) REFERENCES POST(ID),
        Foreign Key (FK_USER) REFERENCES USER_PROFILE(ID),
        PRIMARY KEY (FK_POST, FK_USER)
    );

CREATE TABLE
    USER_FOLLOW(
        FK_FOLLOWER INT,
        FK_FOLLOWING INT,
        Foreign Key (FK_FOLLOWER) REFERENCES USER_PROFILE(ID),
        Foreign Key (FK_FOLLOWING) REFERENCES USER_PROFILE(ID),
        PRIMARY KEY (FK_FOLLOWER, FK_FOLLOWING),
        CHECK(FK_FOLLOWER != FK_FOLLOWING)
    );


CREATE TABLE
    FOLLOW_LOCATION(
        FK_USER INT,
        FK_COUNTRY INT,
        Foreign Key (FK_USER) REFERENCES USER_PROFILE(ID),
        Foreign Key (FK_COUNTRY) REFERENCES COUNTRY(ID),
        PRIMARY KEY (FK_USER, FK_COUNTRY)
    );

CREATE VIEW VW_POST AS
SELECT U.NICKNAME, U.PROFILE_PIC, PT.POST_CONTENT, PT.POST_PIC, PT.POST_TIME, CT.COUNTRY_NAME, COUNT(L.FK_USER)
FROM COUNTRY CT
INNER JOIN USER_PROFILE U
ON U.FK_COUNTRY = CT.ID
INNER JOIN POST PT
ON PT.FK_USER = U.ID
AND PT.FK_COUNTRY = CT.ID
LEFT JOIN LIKES L
ON L.FK_POST = PT.ID;


CREATE VIEW 